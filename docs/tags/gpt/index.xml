<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GPT on Ondřej Čertík</title>
    <link>https://ondrejcertik.com/tags/gpt/</link>
    <description>Recent content in GPT on Ondřej Čertík</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ondrejcertik.com/tags/gpt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>fastGPT: Faster than PyTorch in 300 lines of Fortran</title>
      <link>https://ondrejcertik.com/blog/2023/03/fastgpt-faster-than-pytorch-in-300-lines-of-fortran/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://ondrejcertik.com/blog/2023/03/fastgpt-faster-than-pytorch-in-300-lines-of-fortran/</guid>
      <description>&lt;p&gt;&lt;em&gt;Authors: &lt;a href=&#34;https://ondrejcertik.com/&#34;&gt;Ondřej Čertík&lt;/a&gt;, &lt;a href=&#34;https://github.com/rebcabin/&#34;&gt;Brian Beckman&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this blog post I am announcing&#xA;&lt;a href=&#34;https://github.com/certik/fastGPT/&#34;&gt;fastGPT&lt;/a&gt;, fast GPT-2 inference written in&#xA;Fortran. In it, I show&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Fortran has speed at least as good as default &lt;code&gt;PyTorch&lt;/code&gt; on Apple M1 Max.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Fortran code has statically typed arrays, making maintenance of the code&#xA;easier than with Python&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;It seems that the bottleneck algorithm in GPT-2 inference is matrix-matrix&#xA;multiplication. For physicists like us, matrix-matrix multiplication is very&#xA;familiar, unlike other aspects of AI and ML. Finding this familiar ground&#xA;inspired us to approach GPT-2 like any other numerical computing problem.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
